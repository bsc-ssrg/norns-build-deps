language: bash
services: docker

env:
  global:
    - ORGANIZATION=bscstorage
    - secure: NC4j72ncuQYYdJUJrGXb3nbb/0dGdKpuDzrkhSAlZ5SJiEmi74UmUasqBnWE7/vWJV1n5G3Q/qVufM4GOi/IoT3UxY6a2Dh2glW3hJ9k8ycXVQ/IEHMpVNlSOrD0IOB3dnqKOx8a20R4D/z5pomGFOcPBqdcz6VENzN1VCReX/9GbIMbJJBOjgVPOVbqPdlurfMjVd1cQr03ylXeHC3Nf2S8bERdtGIZDUQAi3Kj8HdMZOwXUwFArl+EPdS4cCMrfHuPOjUHlezBab3CT+ndkJpdw0QJ4nf3GWmWYW+bK2MADyp012Jnbi3QDNLwb4iFf/ZF1h7z8iO8z2qOiOpTe+lst4/gpjCeW7VBfLcLzzzl9Zvaqz3l/CVVBqUiNcY7E1XvOlkgI91ZNc9yLVK5rs6XeB7/30QMJ6IxHVyYDx5vbdkv8enEWl3rBzSEohKxco7f5w67a6BQDAERqbqtmidxp5hhC9/fkVk3JTKVQhpd7T78ns5LzxvHU83d6Ruk3+X3UiamBA2WCDgRNrLWdbzIi6csAPh0M7J1IjVyrlY1RTZsxFjjXzqmTMVh6uDbRE/ULJec2liyEbnNpwcBH2if9XpRDG+p0Wk5dxaM+SFfglwuJyCdVAPznltseG85IH2LxaRSLguHGToSLNLcCIA3Vc5cRlhv/Vo+b/XmYdM=
    - secure: jGDUod/CXiDCitMhzGbMckL03i6kONKrWsNXyWsdlgFXyxz5F9o9IU9KsIBb7H3suWkFm36aIenuVvnEwxvn6MrgB5sNUYpru3XRSpp6MLFn1ipyTcEa2vnCLM7ZhtP+O5yfSK83RUzwGnAW7Vlny8/NTPSdjZ7ce76qS0CnirxfymTvKzHpHlrYl0eLVcZ5ztXfx3Uxb1WR8n6BNO4Lkk3q21k6iR99BG8J6sVttvfu3ASa0KSqjTegQxqvFfpweeYvrtfC1qiRziJA2M8uLT+CxsC+yulu2cxHgZT3z7qa8uE34QY0UjyGtDnnQlUAwN1h09HWOc4a9uMhb8GiWEGdTjiSP/YJfAgG+WCFHz+vTEQ+nHuDWRdA1xDhqkH/26Gx9C+qtIRRZRrkkkXYI5qsd8+g1b49J1ydPu0bv1CnxUxGEeKxYSctEXJOjbUGJ/9QUwyH5sGV6L43GMpzuY5gSGD9iztDPpZ2H0XfbfhAdxFY8zmEZh3s5BSNwBSj0KY6KJD1dWy+n2YlnpKtv3NoeZhh8MnB3h+WJ2VIZw/cMZw+XDasYE4iGW9Rdj9rLjJCLLQ9FJO2micvU8gooG0K4Aaprw/58+BwxnlrmfpqjVYyvyfn+o2zfakoAvUJT9D8OvdTUfPr+KaBKOOGRKhQ3tWS+E6YWFWiYskFLbw=
  matrix:
    - COMPILER=gcc    COMPILER_VERSION=4.8  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
    - COMPILER=gcc    COMPILER_VERSION=4.9  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
    - COMPILER=gcc    COMPILER_VERSION=5.4  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
    - COMPILER=gcc    COMPILER_VERSION=6.5  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
    - COMPILER=gcc    COMPILER_VERSION=7.4  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
    - COMPILER=gcc    COMPILER_VERSION=8.1  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
    - COMPILER=gcc    COMPILER_VERSION=9.1  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
      #    - COMPILER=clang  COMPILER_VERSION=4.8  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
      #    - COMPILER=clang  COMPILER_VERSION=4.9  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
      #    - COMPILER=clang  COMPILER_VERSION=5.4  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
      #    - COMPILER=clang  COMPILER_VERSION=6.5  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
      #    - COMPILER=clang  COMPILER_VERSION=7.4  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
      #    - COMPILER=clang  COMPILER_VERSION=8.1  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1
      #    - COMPILER=clang  COMPILER_VERSION=9.1  LIBFABRIC_VERSION=1.7.1  MERCURY_VERSION=1.0.1

before_script:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
  - env | sort
  - cd "${COMPILER}/${COMPILER_VERSION}"
  - IMAGE="norns-build-deps:${COMPILER}${COMPILER_VERSION}-libfabric${LIBFABRIC_VERSION}-mercury${MERCURY_VERSION}"
  - CACHED_IMAGE="cached_image:latest"
  - ( docker pull "${ORGANIZATION}/${IMAGE}" &&
      docker tag "${ORGANIZATION}/${IMAGE}" "${CACHED_IMAGE}" &&
      docker rmi "${ORGANIZATION}/${IMAGE}" ) || true
  - docker images

script:
  - |
    (
      set -Eeuo pipefail
      set -x
      docker build --pull --cache-from "${CACHED_IMAGE}" --build-arg LIBFABRIC_VERSION="v${LIBFABRIC_VERSION}" --build-arg MERCURY_VERSION="v${MERCURY_VERSION}" --tag "${ORGANIZATION}/${IMAGE}" .
      docker run -ti --rm "${ORGANIZATION}/${IMAGE}" "${COMPILER}" --version
    )

after_script:
  - docker images

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"

deploy:
  provider: script
  script: 
    - docker push "${ORGANIZATION}/${IMAGE}"
  on:
    branch: master
